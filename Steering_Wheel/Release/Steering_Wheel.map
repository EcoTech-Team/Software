Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
                              ./Queue.o (__divmodhi4)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                              ./RS485.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                              ./RS485.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .text          0x0000000000000000        0x0 ./Queue.o
 .data          0x0000000000000000        0x0 ./Queue.o
 .bss           0x0000000000000000        0x0 ./Queue.o
 .text._Z9isQueFullRK6QueueB
                0x0000000000000000       0x34 ./Queue.o
 .text          0x0000000000000000        0x0 ./RS485.o
 .data          0x0000000000000000        0x0 ./RS485.o
 .bss           0x0000000000000000        0x0 ./RS485.o
 .text          0x0000000000000000        0x0 ./crc.o
 .data          0x0000000000000000        0x0 ./crc.o
 .bss           0x0000000000000000        0x0 ./crc.o
 .text          0x0000000000000000        0x0 ./main.o
 .data          0x0000000000000000        0x0 ./main.o
 .bss           0x0000000000000000        0x0 ./main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
LOAD ./Queue.o
LOAD ./RS485.o
LOAD ./crc.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libatmega8.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5b8
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
                0x000000000000005e                . = ALIGN (0x2)
 *(.text.*)
 .text._Z5toQueR6QueueFRK5Frame
                0x000000000000005e       0x3e ./Queue.o
                0x000000000000005e                _Z5toQueR6QueueFRK5Frame
 .text._Z7fromQueR6QueueF
                0x000000000000009c       0x36 ./Queue.o
                0x000000000000009c                _Z7fromQueR6QueueF
 .text._Z10isQueEmptyRK6QueueF
                0x00000000000000d2        0xe ./Queue.o
                0x00000000000000d2                _Z10isQueEmptyRK6QueueF
 .text._Z9isQueFullRK6QueueF
                0x00000000000000e0       0x34 ./Queue.o
                0x00000000000000e0                _Z9isQueFullRK6QueueF
 .text._Z5toQueR6QueueBRKh
                0x0000000000000114       0x22 ./Queue.o
                0x0000000000000114                _Z5toQueR6QueueBRKh
 .text._Z7fromQueR6QueueB
                0x0000000000000136       0x20 ./Queue.o
                0x0000000000000136                _Z7fromQueR6QueueB
 .text._Z10isQueEmptyRK6QueueB
                0x0000000000000156        0xe ./Queue.o
                0x0000000000000156                _Z10isQueEmptyRK6QueueB
 .text._Z13getFrameReadyRK5Frame
                0x0000000000000164       0x90 ./RS485.o
                0x0000000000000164                _Z13getFrameReadyRK5Frame
 .text._Z9sendFrameRK5Frame
                0x00000000000001f4       0x30 ./RS485.o
                0x00000000000001f4                _Z9sendFrameRK5Frame
 .text.__vector_11
                0x0000000000000224       0xde ./RS485.o
                0x0000000000000224                __vector_11
 .text.__vector_13
                0x0000000000000302       0x60 ./RS485.o
                0x0000000000000302                __vector_13
 .text.__vector_3
                0x0000000000000362       0x88 ./RS485.o
                0x0000000000000362                __vector_3
 .text._Z10timer2Initv
                0x00000000000003ea       0x18 ./RS485.o
                0x00000000000003ea                _Z10timer2Initv
 .text._Z10RS485_Initj
                0x0000000000000402       0x14 ./RS485.o
                0x0000000000000402                _Z10RS485_Initj
 .text._Z7gencrc8PKhh
                0x0000000000000416       0x2a ./crc.o
                0x0000000000000416                _Z7gencrc8PKhh
 .text._Z11crc8_updateR5Frame
                0x0000000000000440       0x12 ./crc.o
                0x0000000000000440                _Z11crc8_updateR5Frame
 .text._Z10crc8_checkRK5Frame
                0x0000000000000452        0xe ./crc.o
                0x0000000000000452                _Z10crc8_checkRK5Frame
 .text.__vector_6
                0x0000000000000460       0x1e ./main.o
                0x0000000000000460                __vector_6
 .text._Z10timer1Initv
                0x000000000000047e       0x1c ./main.o
                0x000000000000047e                _Z10timer1Initv
 .text.startup.main
                0x000000000000049a       0xcc ./main.o
                0x000000000000049a                main
 .text.libgcc.div
                0x0000000000000566       0x26 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
                0x0000000000000566                __divmodhi4
                0x0000000000000566                _div
 .text.libgcc.div
                0x000000000000058c       0x28 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
                0x000000000000058c                __udivmodhi4
                0x00000000000005b4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005b4        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                0x00000000000005b4                exit
                0x00000000000005b4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005b4        0x4 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005b8                _etext = .

.data           0x0000000000800060       0x10 load address 0x00000000000005b8
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data._ZZ11__vector_11E1i
                0x0000000000800060        0x1 ./RS485.o
 .data.framesToSend
                0x0000000000800061        0x5 ./RS485.o
                0x0000000000800061                framesToSend
 .data.framesReceived
                0x0000000000800066        0x5 ./RS485.o
                0x0000000000800066                framesReceived
 .data.bytesBuffer
                0x000000000080006b        0x5 ./RS485.o
                0x000000000080006b                bytesBuffer
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800070                . = ALIGN (0x2)
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end, .)

.bss            0x0000000000800070      0x129
                0x0000000000800070                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss._ZZ11__vector_11E17LastByteWasEscape
                0x0000000000800070        0x1 ./RS485.o
 .bss._ZZ11__vector_11E4buff
                0x0000000000800071        0x4 ./RS485.o
 .bss.busEmpty  0x0000000000800075        0x1 ./RS485.o
                0x0000000000800075                busEmpty
 .bss.framesSe  0x0000000000800076       0x50 ./RS485.o
                0x0000000000800076                framesSe
 .bss.framesRe  0x00000000008000c6       0xc8 ./RS485.o
                0x00000000008000c6                framesRe
 .bss.bytesSe   0x000000000080018e        0xa ./RS485.o
                0x000000000080018e                bytesSe
 .bss.shallSendButtonState
                0x0000000000800198        0x1 ./main.o
                0x0000000000800198                shallSendButtonState
 *(COMMON)
                0x0000000000800199                PROVIDE (__bss_end, .)
                0x00000000000005b8                __data_load_start = LOADADDR (.data)
                0x00000000000005c8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800199        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800199                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Queue.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./RS485.o
 .comment       0x0000000000000011       0x12 ./crc.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x48c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_abbrev   0x0000000000000000      0x44e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x17a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Steering_Wheel.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
_Z10RS485_Initj                                   ./RS485.o
                                                  ./main.o
_Z10crc8_checkRK5Frame                            ./crc.o
                                                  ./main.o
_Z10isQueEmptyRK6QueueB                           ./Queue.o
                                                  ./RS485.o
_Z10isQueEmptyRK6QueueF                           ./Queue.o
                                                  ./main.o
                                                  ./RS485.o
_Z10timer1Initv                                   ./main.o
_Z10timer2Initv                                   ./RS485.o
_Z11crc8_updateR5Frame                            ./crc.o
                                                  ./main.o
_Z13getFrameReadyRK5Frame                         ./RS485.o
_Z5toQueR6QueueBRKh                               ./Queue.o
                                                  ./RS485.o
_Z5toQueR6QueueFRK5Frame                          ./Queue.o
                                                  ./RS485.o
_Z7fromQueR6QueueB                                ./Queue.o
                                                  ./RS485.o
_Z7fromQueR6QueueF                                ./Queue.o
                                                  ./main.o
                                                  ./RS485.o
_Z7gencrc8PKhh                                    ./crc.o
_Z9isQueFullRK6QueueB                             ./Queue.o
_Z9isQueFullRK6QueueF                             ./Queue.o
                                                  ./RS485.o
_Z9sendFrameRK5Frame                              ./RS485.o
                                                  ./main.o
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bss_end                                         /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
                                                  ./Queue.o
__do_clear_bss                                    /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                                                  ./main.o
                                                  ./RS485.o
__do_copy_data                                    /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                                                  ./RS485.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__udivmodhi4                                      /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_11                                       ./RS485.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_13                                       ./RS485.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_3                                        ./RS485.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_6                                        ./main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
_div                                              /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
busEmpty                                          ./RS485.o
bytesBuffer                                       ./RS485.o
bytesSe                                           ./RS485.o
exit                                              /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
framesRe                                          ./RS485.o
framesReceived                                    ./RS485.o
                                                  ./main.o
framesSe                                          ./RS485.o
framesToSend                                      ./RS485.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
shallSendButtonState                              ./main.o
